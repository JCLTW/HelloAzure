# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
  - main
  
variables:
  - template: variables.yml

stages:
  - stage: Build
    displayName: Build and push stage
    jobs:
    - job: Build
      displayName: Build
      pool:
        vmImage: ubuntu-latest
      steps:
      - task: Docker@2
        displayName: Build and push an image to container registry
        inputs:
          command: buildAndPush
          repository: 'helloazure'
          dockerfile: '$(Build.SourcesDirectory)/Dockerfile'
          containerRegistry: azureContainerRegistryConnection # Service connection name
          tags: |
            $(tag)
      - task: AzureCLI@2
        displayName: "Helm Save & Push"
        inputs:
          azureSubscription: azureResourceManagerServiceConnection # Service connection name
          scriptType: bash
          scriptLocation: inlineScript
          inlineScript: |
            appVersion="$(tag)"
            echo "App version: $appVersion"
            export HELM_EXPERIMENTAL_OCI=1
            echo $servicePrincipalKey | helm registry login $(acrUrl) --username $servicePrincipalId --password-stdin
            rm -rf *.tgz
            helm chart save $(helm package --app-version "$appVersion" --version $(helmTag) . | grep -o '/.*.tgz') $(acrUrl)/helm/$(helmRepoName)
            helm chart push $(acrUrl)/helm/$(helmRepoName):$(helmTag)
            helm chart remove $(acrUrl)/helm/$(helmRepoName):$(helmTag)
          addSpnToEnvironment: true
          workingDirectory: "helm/"
    - deployment: "Deploy"
      displayName: "Deploy"
      environment: deploy-test
      dependsOn: ["Build"]
      timeoutInMinutes: 300
      strategy:
        runOnce:
          deploy:
            steps:
              - download: none
              - checkout: none
              - task: AzureCLI@2
                displayName: "Helm upgrade"
                inputs:
                  azureSubscription: azureResourceManagerServiceConnection # Service connection name
                  scriptType: bash
                  scriptLocation: inlineScript
                  inlineScript: |
                    export HELM_EXPERIMENTAL_OCI=1
                    az aks get-credentials --name $(aksName) --resource-group $(aksResourceGroup)
                    kubectl config use-context $(aksName)
                    echo $servicePrincipalKey | helm registry login $(acrUrl) --username $servicePrincipalId --password-stdin
                    helm chart pull $(acrUrl)/helm/$(helmRepoName):$(helmTag)
                    rm -rf ./charts
                    helm chart export $(acrUrl)/helm/$(helmRepoName):$(helmTag) --destination ./charts
                    cd ./charts/hello
                    helm upgrade -f values.yaml --install --create-namespace --wait $(helmRepoName) .
                  addSpnToEnvironment: true